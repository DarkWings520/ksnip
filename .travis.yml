language: cpp
compiler: gcc
sudo: required
dist: trusty

# prevent default git clone --depth 50
git:
  depth: false

services:
- docker

before_install:
- docker pull opensuse
- docker ps -a
- docker run -it opensuse bash -c "uname -a"
- docker run -it opensuse uname -a

install:
- docker run -it opensuse bash -c "git clone git://anongit.kde.org/extra-cmake-modules"
- docker run -it opensuse bash -c "cd extra-cmake-modules"
- docker run -it opensuse bash -c "mkdir build && cd build"
- docker run -it opensuse bash -c "cmake .. && make && sudo make install"
#  - sudo apt-get -y install qt56base qt56x11extras qt56tools
#  - source /opt/qt*/bin/qt*-env.sh
#  - git clone git://anongit.kde.org/extra-cmake-modules
#  - cd extra-cmake-modules
#  - mkdir build && cd build
#  - cmake ..
#  - make && sudo make install
#  - cd ../..
#  - git clone git://github.com/DamirPorobic/kColorPicker
#  - cd kColorPicker
#  - mkdir build && cd build
#  - cmake ..
#  - make && sudo make install
#  - sudo ldconfig
#  - cd ../..
#  - git clone git://github.com/DamirPorobic/kImageAnnotator
#  - cd kImageAnnotator
#  - mkdir build && cd build
#  - cmake ..
#  - make && sudo make install
#  - sudo ldconfig
#  - cd ../..


script:
#  - export VERSION=$(git rev-list --count HEAD)-$(git rev-parse --short HEAD) # required for version sufix
#  - cmake . -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DVERSION_SUFIX=$VERSION
#  - make -j$(nproc)
#  - make DESTDIR=appdir -j$(nproc) install ; find appdir/
#  - mkdir appdir/usr/bin ; mv appdir/bin/ksnip ./appdir/usr/bin/ ; rm -r ./appdir/bin
#  - wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
#  - chmod a+x linuxdeployqt-continuous-x86_64.AppImage
#  - unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH
#  - ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/*.desktop -bundle-non-qt-libs
#  - ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/*.desktop -appimage

after_success:
#  - find appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq
#  - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
#  - bash upload.sh ksnip*.AppImage*

branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)/
